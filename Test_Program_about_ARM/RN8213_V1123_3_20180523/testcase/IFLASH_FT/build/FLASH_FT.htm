<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [E:\2017_FT_prog\V111_UART\backup\FLASH_FT\build\FLASH_FT.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image E:\2017_FT_prog\V111_UART\backup\FLASH_FT\build\FLASH_FT.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.02 [Build 28]: Last Updated: Tue Oct 24 19:53:19 2017
<BR><P>
<H3>Maximum Stack Usage =        340 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SysModeChg &rArr; sysmodeWrite &rArr; PllEnable &rArr; loscCheck &rArr; loscCalc &rArr; usTimeout &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[1d]">EXT0_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">EXT0_HANDLER</a><BR>
 <LI><a href="#[1e]">EXT1_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">EXT1_HANDLER</a><BR>
 <LI><a href="#[1f]">EXT2_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">EXT2_HANDLER</a><BR>
 <LI><a href="#[20]">EXT3_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">EXT3_HANDLER</a><BR>
 <LI><a href="#[21]">EXT4_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">EXT4_HANDLER</a><BR>
 <LI><a href="#[22]">EXT5_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">EXT5_HANDLER</a><BR>
 <LI><a href="#[23]">EXT6_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">EXT6_HANDLER</a><BR>
 <LI><a href="#[24]">EXT7_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">EXT7_HANDLER</a><BR>
 <LI><a href="#[1c]">NVM_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">NVM_HANDLER</a><BR>
 <LI><a href="#[1b]">DMA_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">DMA_HANDLER</a><BR>
 <LI><a href="#[1a]">CT_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">CT_HANDLER</a><BR>
 <LI><a href="#[8]">RTC_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">RTC_HANDLER</a><BR>
 <LI><a href="#[9]">EMU_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">EMU_HANDLER</a><BR>
 <LI><a href="#[a]">MADC_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">MADC_HANDLER</a><BR>
 <LI><a href="#[b]">UART0_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">UART0_HANDLER</a><BR>
 <LI><a href="#[c]">UART1_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">UART1_HANDLER</a><BR>
 <LI><a href="#[d]">UART2_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">UART2_HANDLER</a><BR>
 <LI><a href="#[e]">UART3_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">UART3_HANDLER</a><BR>
 <LI><a href="#[f]">SPI_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">SPI_HANDLER</a><BR>
 <LI><a href="#[10]">I2C_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">I2C_HANDLER</a><BR>
 <LI><a href="#[12]">ISO78161_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ISO78161_HANDLER</a><BR>
 <LI><a href="#[11]">ISO78160_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ISO78160_HANDLER</a><BR>
 <LI><a href="#[13]">TC0_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">TC0_HANDLER</a><BR>
 <LI><a href="#[14]">TC1_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">TC1_HANDLER</a><BR>
 <LI><a href="#[15]">TC2_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">TC2_HANDLER</a><BR>
 <LI><a href="#[16]">TC3_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">TC3_HANDLER</a><BR>
 <LI><a href="#[17]">WDT_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">WDT_HANDLER</a><BR>
 <LI><a href="#[18]">KBI_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">KBI_HANDLER</a><BR>
 <LI><a href="#[19]">LCD_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">LCD_HANDLER</a><BR>
 <LI><a href="#[7]">VCH_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">VCH_HANDLER</a><BR>
 <LI><a href="#[6]">CMP_HANDLER</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">CMP_HANDLER</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6]">CMP_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[1a]">CT_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[1b]">DMA_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[9]">EMU_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[1d]">EXT0_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[1e]">EXT1_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[1f]">EXT2_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[20]">EXT3_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[21]">EXT4_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[22]">EXT5_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[23]">EXT6_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[24]">EXT7_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[10]">I2C_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[11]">ISO78160_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[12]">ISO78161_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[18]">KBI_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[19]">LCD_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[a]">MADC_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[1c]">NVM_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[8]">RTC_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[f]">SPI_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_rn821x.o(.text) referenced from startup_ra9103.o(.text)
 <LI><a href="#[13]">TC0_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[14]">TC1_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[15]">TC2_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[16]">TC3_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[b]">UART0_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[c]">UART1_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[d]">UART2_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[e]">UART3_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[7]">VCH_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[17]">WDT_HANDLER</a> from startup_ra9103.o(.text) referenced from startup_ra9103.o(RESET)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ra9103.o(.text)
 <LI><a href="#[25]">main</a> from ra9103a0_flash_qc.o(.text) referenced from entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[28]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[48]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[4b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[2a]"></a>getSysclk</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = getSysclk &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
</UL>

<P><STRONG><a name="[37]"></a>WdtInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>WdtFeed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_check_empty
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_check_data
</UL>

<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_rn821x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(.text)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXT0_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT0_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT0_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXT1_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT1_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT1_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXT2_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT2_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT2_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXT3_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT3_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT3_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXT4_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT4_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT4_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXT5_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT5_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT5_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXT6_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT6_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT6_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXT7_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT7_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT7_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>NVM_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVM_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVM_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>CT_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EMU_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMU_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMU_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>MADC_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MADC_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MADC_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>UART0_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UART1_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>UART2_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>UART3_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>SPI_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>I2C_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ISO78161_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO78161_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO78161_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ISO78160_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO78160_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO78160_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TC0_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TC0_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TC0_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TC1_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TC1_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TC1_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TC2_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TC2_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TC2_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TC3_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TC3_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TC3_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>WDT_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>KBI_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KBI_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KBI_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>LCD_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>VCH_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCH_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCH_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>CMP_HANDLER</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ra9103.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_HANDLER
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ra9103.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>fl_check</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_page_prog
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_prog
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_erase
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
</UL>

<P><STRONG><a name="[30]"></a>fl_chip_erase</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, flash_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fl_chip_erase &rArr; sendCmd &rArr; setMipTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_check
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRemapAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>fl_chip_prog</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, flash_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fl_chip_prog &rArr; sendCmd &rArr; setMipTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_check
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRemapAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[32]"></a>fl_page_prog</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, flash_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fl_page_prog &rArr; sendCmd &rArr; setMipTime
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_check
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRemapAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>qc_fail</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ra9103a0_flash_qc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>fl_chip_check_data</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ra9103a0_flash_qc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = fl_chip_check_data &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WdtFeed
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>fl_chip_check_empty</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, ra9103a0_flash_qc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fl_chip_check_empty
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WdtFeed
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25]"></a>main</STRONG> (Thumb, 508 bytes, Stack size 144 bytes, ra9103a0_flash_qc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = main &rArr; SysModeChg &rArr; sysmodeWrite &rArr; PllEnable &rArr; loscCheck &rArr; loscCalc &rArr; usTimeout &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysModeChg
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_check_empty
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_check_data
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qc_fail
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_page_prog
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_prog
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_erase
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WdtInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P><STRONG><a name="[45]"></a>getChipid</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, sysctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysModeChg
</UL>

<P><STRONG><a name="[38]"></a>SysModeChg</STRONG> (Thumb, 624 bytes, Stack size 40 bytes, sysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = SysModeChg &rArr; sysmodeWrite &rArr; PllEnable &rArr; loscCheck &rArr; loscCalc &rArr; usTimeout &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChipid
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysmodeWrite
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMipTW
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usTimeout
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;currentClk
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>Remap4Sel</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, sysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlockNVM
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getMipAddr
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usTimeout
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_check_data
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_page_prog
</UL>

<P><STRONG><a name="[29]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[4d]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, common.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSysclk
</UL>

<P><STRONG><a name="[4e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[4f]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[50]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2d]"></a>getRemapAddr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, flash_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_page_prog
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_prog
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_erase
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMipTime
</UL>

<P><STRONG><a name="[2c]"></a>setMipTime</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, flash_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setMipTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRemapAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
</UL>

<P><STRONG><a name="[2e]"></a>sendCmd</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, flash_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sendCmd &rArr; setMipTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_check
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMipTime
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRemapAddr
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSysclk
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_page_prog
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_prog
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fl_chip_erase
</UL>

<P><STRONG><a name="[3b]"></a>currentClk</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, sysctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usTimeout
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysModeChg
</UL>

<P><STRONG><a name="[3e]"></a>_getMipAddr</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, sysctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remap4Sel
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMipTW
</UL>

<P><STRONG><a name="[3c]"></a>TICK_STAT_GET</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usTimeout
</UL>

<P><STRONG><a name="[3a]"></a>usTimeout</STRONG> (Thumb, 292 bytes, Stack size 48 bytes, sysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = usTimeout &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_STAT_GET
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;currentClk
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysmodeWrite
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoscEnable
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PllEnable
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loscCheck
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loscCalc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysModeChg
</UL>

<P><STRONG><a name="[3d]"></a>setMipTW</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, sysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = setMipTW
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getMipAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysmodeWrite
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysModeChg
</UL>

<P><STRONG><a name="[3f]"></a>loscCalc</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, sysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = loscCalc &rArr; usTimeout &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loscCheck
</UL>

<P><STRONG><a name="[40]"></a>loscCheck</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, sysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = loscCheck &rArr; loscCalc &rArr; usTimeout &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loscCalc
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysmodeWrite
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PllEnable
</UL>

<P><STRONG><a name="[41]"></a>PllEnable</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, sysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = PllEnable &rArr; loscCheck &rArr; loscCalc &rArr; usTimeout &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loscCheck
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysmodeWrite
</UL>

<P><STRONG><a name="[43]"></a>PllOn</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sysctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoscEnable
</UL>

<P><STRONG><a name="[42]"></a>HoscEnable</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, sysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HoscEnable &rArr; usTimeout &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PllOn
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysmodeWrite
</UL>

<P><STRONG><a name="[44]"></a>sysmodeWrite</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, sysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = sysmodeWrite &rArr; PllEnable &rArr; loscCheck &rArr; loscCalc &rArr; usTimeout &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoscEnable
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PllEnable
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loscCheck
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMipTW
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysModeChg
</UL>

<P><STRONG><a name="[47]"></a>unlockNVM</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sysctrl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remap4Sel
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
